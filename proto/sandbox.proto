syntax = "proto3";

option go_package = "github.com/Kidr1cE/golang-oj-worker/proto/grpc";

// HealthCheck
message HealthCheckRequest {}
message HealthCheckResponse {
    bool status = 1;
}

// GetDockerStatus
message GetStatusRequest{}
message GetStatusResponse{
    bool status = 1;
    string message = 2;
}

// SetEnv
message SetEnvRequest {
    string image_name = 1;
    string entryshell = 2;
}
message SetEnvResponse {
    bool status = 1;
    string message = 2;
}

// SendRequirements
message FileChunk {
    string filename = 1;
    bytes content = 2;
    bool is_last_chunk = 3;
}
message UploadStatus {
    bool success = 1;
    string message = 2;
}

// Run
message TestCase {
    string input = 1;
    string output = 2;
}
message TestResult {
    string input = 1;
    string output = 2;
    string expected_output = 3;
    int32 success = 4;
    string error = 5;
}
message SimpleRunRequest {
    string filename = 1;
    string input = 2;
}
message SimpleRunResponse {
    repeated TestResult test_results = 1;
}

service Sandbox {
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}
    rpc GetDockerStatus(GetStatusRequest) returns (GetStatusResponse) {}
    rpc SetEnv(SetEnvRequest) returns (SetEnvResponse) {}
    rpc SendRequirements(stream FileChunk) returns (stream UploadStatus) {}
    rpc SimpleRun(SimpleRunRequest) returns (SimpleRunResponse) {}
}
